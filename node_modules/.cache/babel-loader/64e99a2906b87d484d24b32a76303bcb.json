{"ast":null,"code":"import _defineProperty from\"/home/mario/Documentos/projects/portafolio/app-clima/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/mario/Documentos/projects/portafolio/app-clima/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/mario/Documentos/projects/portafolio/app-clima/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Form,Input,Button,notification,Table,Statistic,Row,Col}from\"antd\";import{getCiudadApi,getClimaApi}from\"../../api/clima\";import\"./Clima.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Clima(){var _useState=useState({ciudad:\"\"}),_useState2=_slicedToArray(_useState,2),inputs=_useState2[0],setInputs=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),lugares=_useState4[0],setLugares=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),mostrar=_useState6[0],setMostrar=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),temperatura=_useState8[0],setTemperatura=_useState8[1];var changeForm=function changeForm(e){setInputs(_objectSpread(_objectSpread({},inputs),{},_defineProperty({},e.target.name,e.target.value)));};var onFinish=function onFinish(){var ciudad=inputs.ciudad;if(!ciudad){notification[\"error\"]({message:\"Todos los campos son obligatorios.\"});}else{getCiudadApi(inputs).then(function(response){setLugares(response.message);setMostrar(true);});}resetForm();};var resetForm=function resetForm(){setInputs({ciudad:\"\"});};var columns=[{title:\"Id\",dataIndex:\"id\",key:\"id\",responsive:[\"lg\"],width:\"5%\"},{title:\"Lugar\",dataIndex:\"place_name\",key:\"place_name\"},{title:\"Cooredenadas\",dataIndex:\"center\",key:\"center[1]\",responsive:[\"lg\"]},{title:\"Action\",key:\"operation\",render:function render(item){return/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:function onClick(){return seleccion(item);},children:\"ver\"});}}];var seleccion=function seleccion(item){console.log(item);getClimaApi(item.center).then(function(response){console.log(response.message);setTemperatura(response.message);});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"top\",children:/*#__PURE__*/_jsx(Row,{justify:\"center\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/clima\",children:\"CLIMA APP\"})})})})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{span:12,offset:6,children:/*#__PURE__*/_jsx(\"div\",{className:\"lightSpeedIn\",children:/*#__PURE__*/_jsxs(Form,{name:\"basic\",initialValues:{remember:true},onFinish:onFinish,onChange:changeForm,children:[/*#__PURE__*/_jsx(Form.Item,{rules:[{required:true,message:\"Por favor ingresa una busqueda!\"}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Ingresa una ciudad\",name:\"ciudad\",value:inputs.ciudad})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Buscar\"})})]})})})}),/*#__PURE__*/_jsx(Row,{justify:\"center\",children:/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(Temp,{data:temperatura,mostrar:mostrar}),/*#__PURE__*/_jsx(Table,{dataSource:lugares,columns:columns,pagination:\"bottomCenter\",size:\"small\",style:{visibility:mostrar?\"visible\":\"hidden\"}})]})})]});}function Temp(props){var temp=props.data;console.log(temp.timezone);if(temp){return/*#__PURE__*/_jsx(Row,{gutter:16,children:/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsxs(Row,{gutter:[1,8],children:[/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsx(Statistic,{title:\"\".concat(temp.name),value:temp.main.temp,precision:1,valueStyle:{color:\"#96bb7c\"},suffix:\"\\xB0\"})}),/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsx(Statistic,{title:\"maxima\",value:temp.main.temp_max,precision:1,valueStyle:{color:\"#c64756\"},suffix:\"\\xB0\"})}),/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsx(Statistic,{title:\"minima\",value:temp.main.temp_min,precision:1,valueStyle:{color:\"#228dff\"},suffix:\"\\xB0\"})})]})})});}return null;}","map":{"version":3,"sources":["/home/mario/Documentos/projects/portafolio/app-clima/cliente/src/components/Clima/Clima.jsx"],"names":["React","useState","Form","Input","Button","notification","Table","Statistic","Row","Col","getCiudadApi","getClimaApi","Clima","ciudad","inputs","setInputs","lugares","setLugares","mostrar","setMostrar","temperatura","setTemperatura","changeForm","e","target","name","value","onFinish","message","then","response","resetForm","columns","title","dataIndex","key","responsive","width","render","item","seleccion","console","log","center","remember","required","visibility","Temp","props","temp","data","timezone","main","color","temp_max","temp_min"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  notification,\n  Table,\n  Statistic,\n  Row,\n  Col,\n} from \"antd\";\n\nimport { getCiudadApi, getClimaApi } from \"../../api/clima\";\n\nimport \"./Clima.scss\";\n\nexport default function Clima() {\n  const [inputs, setInputs] = useState({\n    ciudad: \"\",\n  });\n  const [lugares, setLugares] = useState();\n  const [mostrar, setMostrar] = useState(false);\n  const [temperatura, setTemperatura] = useState(\"\");\n\n  const changeForm = (e) => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onFinish = () => {\n    const { ciudad } = inputs;\n    if (!ciudad) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios.\",\n      });\n    } else {\n      getCiudadApi(inputs).then((response) => {\n        setLugares(response.message);\n        setMostrar(true);\n      });\n    }\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setInputs({\n      ciudad: \"\",\n    });\n  };\n\n  const columns = [\n    {\n      title: \"Id\",\n      dataIndex: \"id\",\n      key: \"id\",\n      responsive: [\"lg\"],\n      width: \"5%\",\n    },\n    {\n      title: \"Lugar\",\n      dataIndex: \"place_name\",\n      key: \"place_name\",\n    },\n    {\n      title: \"Cooredenadas\",\n      dataIndex: \"center\",\n      key: \"center[1]\",\n      responsive: [\"lg\"],\n    },\n    {\n      title: \"Action\",\n      key: \"operation\",\n      render: (item) => (\n        <Button type=\"primary\" onClick={() => seleccion(item)}>\n          ver\n        </Button>\n      ),\n    },\n  ];\n  const seleccion = (item) => {\n    console.log(item);\n    getClimaApi(item.center).then((response) => {\n      console.log(response.message);\n      setTemperatura(response.message);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"top\">\n        <Row justify=\"center\">\n          <Col>\n            <div>\n              <p>\n                <a href=\"/clima\">CLIMA APP</a>\n              </p>\n            </div>\n          </Col>\n        </Row>\n      </div>\n      <Row>\n        <Col span={12} offset={6}>\n          <div className=\"lightSpeedIn\">\n            <Form\n              name=\"basic\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={onFinish}\n              onChange={changeForm}\n            >\n              <Form.Item\n                rules={[\n                  {\n                    required: true,\n                    message: \"Por favor ingresa una busqueda!\",\n                  },\n                ]}\n              >\n                <Input\n                  placeholder=\"Ingresa una ciudad\"\n                  name=\"ciudad\"\n                  value={inputs.ciudad}\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Buscar\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </Col>\n      </Row>\n\n      <Row justify=\"center\">\n        <Col>\n          <Temp data={temperatura} mostrar={mostrar} />\n\n          <Table\n            dataSource={lugares}\n            columns={columns}\n            pagination=\"bottomCenter\"\n            size=\"small\"\n            style={{ visibility: mostrar ? \"visible\" : \"hidden\" }}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction Temp(props) {\n  const temp = props.data;\n  console.log(temp.timezone);\n  if (temp) {\n    return (\n      <Row  gutter={16}>\n        <Col span={24}>\n          <Row gutter={[1,8]}>\n            <Col span={8}>\n              \n                <Statistic\n                  \n                  title={`${temp.name}`}\n                  value={temp.main.temp}\n                  precision={1}\n                  valueStyle={{ color: \"#96bb7c\" }}\n                  suffix=\"°\"\n                />\n             \n              </Col>\n            <Col span={8}>\n              \n                <Statistic\n                  title={`maxima`}\n                  value={temp.main.temp_max}\n                  precision={1}\n                  valueStyle={{ color: \"#c64756\" }}\n                  suffix=\"°\"\n                />\n             \n            </Col>\n            <Col span={8}>\n              \n                <Statistic\n                  title={`minima`}\n                  value={temp.main.temp_min}\n                  precision={1}\n                  valueStyle={{ color: \"#228dff\" }}\n                  suffix=\"°\"\n                />\n             \n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}